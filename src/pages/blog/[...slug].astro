---
import {getCollection, getEntries} from 'astro:content';
import Layout from "../../layouts/Layout.astro";

type postData = {
    data: {
        title: string;
        relatedPosts: string[];
        date: Date
        tags: string[];
    };
    slug: string;
}
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');
    return blogEntries.map(entry => ({
        params: {slug: entry.slug}, props: {entry},
    }));
}
// 2. For your template, you can get the entry directly from the prop

const {entry}: postData = Astro.props;
let relatedPosts
if (entry.data.relatedPosts) {
    relatedPosts = await getEntries?.(entry.data.relatedPosts);
}


const {Content} = await entry.render();
---

<Layout>
    <h1>{entry.data.title}</h1>
    <p>{entry.data.date.toDateString()}</p>
    <div class="tags">
        <span>Tags: </span>
        <ul class="tags-list">
            {entry.data.tags.map(tag => (
                    <li>{tag}</li>
            ))}
        </ul>
    </div>
    <Content/>

    <h2>You might also like:</h2>
    {relatedPosts ? (
            relatedPosts.map(p => (
                    <a href={p.slug}>{p.data.title}</a>
            )))
        : (
                    <p>No related posts</p>
        )
    }
</Layout>

<style>
    h1, h2, h3, h4 {
        font-family: SpaceGrotesk, 'sans-serif';
    }

    h1 {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 1rem;
        text-align: left;
    }

    .tags-list {
        list-style: none;
display: inline-flex;
        gap: .5rem
    }
</style>
