---
import { getCollection, getEntries } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import MarkdownLayout from "../../layouts/MarkdownLayout.astro";

type RelatedPosts = {
  id: string;
  slug: string;
  body: string;
  collection: string;
  data: {
    title: string;
    date: Date;
    draft: boolean;
    tags: string[];
    summary: string;
    dateUpdated?: Date;
    relatedPosts?: RelatedPosts[];
  };
}[];

const { entry } = Astro.props;
const { Content } = await entry.render();
let relatedPosts: RelatedPosts[];

if (entry.data.relatedPosts) {
    relatedPosts = await getEntries(entry.data.relatedPosts);
}

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntries = await getCollection("blog");
    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}
---

<Layout title={`Brian Colclough | ${entry.data.title}`}>
    <MarkdownLayout frontmatter={entry.data} relatedPosts={relatedPosts}>
        <Content />
    </MarkdownLayout>
</Layout>
