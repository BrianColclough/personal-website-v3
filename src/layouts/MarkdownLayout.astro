---
import {MarkdownLayoutProps} from "astro";
import {RelatedPosts} from "../components/related-posts/related-posts";

type Props = MarkdownLayoutProps<{
    frontmatter: {
        title: string;
        relatedPosts: string[];
        date: Date
        tags: string[];
    }
    relatedPosts: unknown
}>

const options = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
};

const {frontmatter, relatedPosts} = Astro.props;
const formattedPublishedDate = new Date(frontmatter.date).toLocaleDateString("en-US", options as Intl.DateTimeFormatOptions);
const formattedDateUpdated = new Date(frontmatter.dateUpdated).toLocaleDateString("en-US", options as Intl.DateTimeFormatOptions);
---
<div class="markdown-wrapper">
    <article class="markdown-container">
        <div class="tags">
            <sub class="tags-list">
                {frontmatter.tags.map(tag => (
                        <strong>{tag}</strong>
                        <span class="tag-seperator">/</span>
                ))}
            </sub>
        </div>
        <h1 class="frontmatter-header">{frontmatter.title}
            <span class="header-line"></span>
        </h1>
        <div class="dates">
            <time datetime={frontmatter.date} class="pub-date"><i>{formattedPublishedDate}</i></time>
            <time datetime={frontmatter.dateUpdated} class:list={['pub-date', {'hidden': !frontmatter.dateUpdated}]}>
                <strong>updated on: </strong> <i>{formattedDateUpdated}</i>
            </time>
        </div>

        <slot/>

        <RelatedPosts posts={relatedPosts}/>

    </article>
</div>

<style is:global>
    h2, h3, h4 {
        font-family: 'Wubberly', sans-serif;
        font-weight: bold;
        margin-left: -1rem;
    }

    h2 {
        font-size: 2.5rem;
    }

    .frontmatter-header {
        font-family: 'Wubberly', sans-serif;
        font-size: 5rem;
        text-align: center;
        font-weight: 700;
        position: relative;
        margin-bottom: 2rem;
        padding-top: 0;
        margin-top: 0;
    }

    body {
        font-size: 1.1rem;
        line-height: 1.7;
    }

    .hidden {
        display: none;
    }

    .tags-list {
        list-style: none;
        display: inline-flex;
        gap: .5rem;
        margin-top: 3rem;
        color: var(--accent-neon-purple);
    }

    .tag-seperator {
        color: var(--accent-orange);
    }

    .tag-seperator:last-child {
        display: none;
    }

    .markdown-wrapper {
        display: flex;
        justify-content: center;
    }

    .markdown-container {
        max-width: 800px;
        margin-top: 8rem;
        position: relative;
    }

    .header-line {
        display: block;
        position: absolute;
        overflow: hidden;
        right: 0;
        left: 0;
        height: 2px;
        background-color: var(--accent-orange);
    }

    .dates {
        width: 100%;
        align-items: center;
        display: flex;
        flex-direction: column;
        gap: .5rem;
        margin-top: 2rem;
    }

    @media (max-width: 800px) {
        .markdown-container {
            margin-left: 2rem;
            margin-right: 2rem
        }

        .frontmatter-header {
            font-size: 3rem;
        }
    }
</style>